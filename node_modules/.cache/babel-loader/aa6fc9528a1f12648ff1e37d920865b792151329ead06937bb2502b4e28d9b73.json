{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    incerement(state) {\n      state.counter++;\n    },\n    decerement() {},\n    increase() {},\n    toggleCounter() {}\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\n\n// store.dispatch({ type: \"increment\" });\n// store.dispatch({ type: \"decrement\" });\n\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","incerement","state","decerement","increase","toggleCounter","counterReducer","action","type","amount","store"],"sources":["/Users/aripov/Desktop/react-projects/redux-counter/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    incerement(state) {\n      state.counter++;\n    },\n    decerement() {},\n    increase() {},\n    toggleCounter() {},\n  },\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter,\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\n// store.dispatch({ type: \"increment\" });\n// store.dispatch({ type: \"decrement\" });\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACVI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,UAAU,CAACC,KAAK,EAAE;MAChBA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDM,UAAU,GAAG,CAAC,CAAC;IACfC,QAAQ,GAAG,CAAC,CAAC;IACbC,aAAa,GAAG,CAAC;EACnB;AACF,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCJ,KAAK,uEAAGN,YAAY;EAAA,IAAEW,MAAM;EAClD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGU,MAAM,CAACE,MAAM;MACtCX,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO;MACtBC,WAAW,EAAE,CAACI,KAAK,CAACJ;IACtB,CAAC;EACH;EAEA,OAAOI,KAAK;AACd,CAAC;AAED,MAAMQ,KAAK,GAAGhB,WAAW,CAACY,cAAc,CAAC;;AAEzC;AACA;;AAEA,eAAeI,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}